diff -Naur lxqt-build-tools-0.3.2/cmake/modules/LXQtCompilerSettings.cmake lxqt-build-tools-0.3.2.nolto/cmake/modules/LXQtCompilerSettings.cmake
--- lxqt-build-tools-0.3.2/cmake/modules/LXQtCompilerSettings.cmake	2017-01-13 23:21:35.000000000 +0000
+++ lxqt-build-tools-0.3.2.nolto/cmake/modules/LXQtCompilerSettings.cmake	2017-04-06 04:07:15.908330843 +0000
@@ -144,35 +144,6 @@
 
 
 #-----------------------------------------------------------------------------
-# Turn on more aggrassive optimizations not supported by CMake
-# References: https://wiki.qt.io/Performance_Tip_Startup_Time
-#-----------------------------------------------------------------------------
-if (CMAKE_COMPILER_IS_GNUCXX OR LXQT_COMPILER_IS_CLANGCXX)
-    # -flto: use link-time optimizations to generate more efficient code
-    if (CMAKE_COMPILER_IS_GNUCXX)
-        set(LTO_FLAGS "-flto -fuse-linker-plugin")
-        # When building static libraries with LTO in gcc >= 4.9,
-        # "gcc-ar" and "gcc-ranlib" should be used instead of "ar" and "ranlib".
-        # references:
-        #   https://gcc.gnu.org/gcc-4.9/changes.html
-        #   http://hubicka.blogspot.tw/2014/04/linktime-optimization-in-gcc-2-firefox.html
-        #   https://github.com/monero-project/monero/pull/1065/commits/1855213c8fb8f8727f4107716aab8e7ba826462b
-        if (NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS "4.9.0")  # gcc >= 4.9
-            set(CMAKE_AR "gcc-ar")
-            set(CMAKE_RANLIB "gcc-ranlib")
-        endif()
-    elseif (LXQT_COMPILER_IS_CLANGCXX)
-        # The link-time optimization of clang++/llvm seems to be too aggrassive.
-        # After testing, it breaks the signal/slots of QObject sometimes.
-        # So disable it for now until there is a solution.
-        # set(LTO_FLAGS "-flto")
-    endif()
-    # apply these options to "Release" build type only
-    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${LTO_FLAGS}")
-endif()
-
-
-#-----------------------------------------------------------------------------
 # CXX11 and CXX0X requirements
 #-----------------------------------------------------------------------------
 CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
